=================================================
TEST 4: start().  System thread only.  Calls lwp_exit();

This will cause the system thread to be turned into an LWP
then bail.


----------
Reference:
----------
About to call lwp_start() with no threads...ok.
----------
Submitted:
----------
[lwp_yeild] this point should not be reached.
: Success
About to call lwp_start() with no threads...ok.
I have entered qlen
[1]qlen(): 0I have entered qlen

---------------------------------
Differences (< reference > output)
---------------------------------

0a1,2
> [lwp_yeild] this point should not be reached.
> : Success
1a4,5
> I have entered qlen
> [1]qlen(): 0I have entered qlen
---------
=================================================
TEST 8: Five lwps, calling lwp_yield(), then exit()

This test spawns five threads that each print a message and yield.
The second time through the last one calls exit();

----------
Reference:
----------
Greetings from Thread 0.  Yielding...
Greetings from Thread 1.  Yielding...
Greetings from Thread 2.  Yielding...
Greetings from Thread 3.  Yielding...
Greetings from Thread 4.  Yielding...
I (0) am still alive.  Goodbye.
I (1) am still alive.  Goodbye.
I (2) am still alive.  Goodbye.
I (3) am still alive.  Goodbye.
I (4) am still alive.  Goodbye.
----------
Submitted:
----------
Greetings from Thread 0.  Yielding...
Greetings from Thread 1.  Yielding...
Greetings from Thread 2.  Yielding...
Greetings from Thread 3.  Yielding...
Greetings from Thread 4.  Yielding...
I have entered qlen
I have entered qlen
I (0) am still alive.  Goodbye.
I (1) am still alive.  Goodbye.
I (2) am still alive.  Goodbye.
I (3) am still alive.  Goodbye.
I (4) am still alive.  Goodbye.

---------------------------------
Differences (< reference > output)
---------------------------------

5a6,7
> I have entered qlen
> I have entered qlen
---------
=================================================
TEST 9: Five lwps, calling lwp_yield(), then lwp_exit()

This test spawns five LWPs, each of which yields once,
then calls lwp_exit() the second time.
----------
Reference:
----------
Greetings from Thread 0.  Yielding...
Greetings from Thread 1.  Yielding...
Greetings from Thread 2.  Yielding...
Greetings from Thread 3.  Yielding...
Greetings from Thread 4.  Yielding...
I (0) am still alive.  Goodbye.
I (1) am still alive.  Goodbye.
I (2) am still alive.  Goodbye.
I (3) am still alive.  Goodbye.
I (4) am still alive.  Goodbye.
LWPs have ended.
----------
Submitted:
----------
Greetings from Thread 0.  Yielding...
Greetings from Thread 1.  Yielding...
Greetings from Thread 2.  Yielding...
Greetings from Thread 3.  Yielding...
Greetings from Thread 4.  Yielding...
I have entered qlen
I have entered qlen
I (0) am still alive.  Goodbye.
I have entered qlen
[1]qlen(): 5I have entered qlen
I (1) am still alive.  Goodbye.
I have entered qlen
[2]qlen(): 4I have entered qlen
I (2) am still alive.  Goodbye.
I have entered qlen
[3]qlen(): 3I have entered qlen
I (3) am still alive.  Goodbye.
I have entered qlen
[4]qlen(): 2I have entered qlen
I (4) am still alive.  Goodbye.
I have entered qlen
[5]qlen(): 1I have entered qlen
LWPs have ended.

---------------------------------
Differences (< reference > output)
---------------------------------

5a6,7
> I have entered qlen
> I have entered qlen
6a9,10
> I have entered qlen
> [1]qlen(): 5I have entered qlen
7a12,13
> I have entered qlen
> [2]qlen(): 4I have entered qlen
8a15,16
> I have entered qlen
> [3]qlen(): 3I have entered qlen
9a18,19
> I have entered qlen
> [4]qlen(): 2I have entered qlen
10a21,22
> I have entered qlen
> [5]qlen(): 1I have entered qlen
---------
=================================================
TEST 10: Five threads, variable iters, exit from front

This is the numbersmain program distributed with the assignment.
Each thread (1..5) exits after its number of iterations


----------
Reference:
----------
Launching LWPS
    1
         2
              3
                   4
                        5
         2
              3
                   4
                        5
              3
                   4
                        5
                   4
                        5
                        5
Back from LWPS.
----------
Submitted:
----------
Launching LWPS
    1
         2
              3
                   4
                        5
I have entered qlen
I have entered qlen
I have entered qlen
[1]qlen(): 5I have entered qlen
         2
              3
                   4
                        5
I have entered qlen
I have entered qlen
I have entered qlen
[2]qlen(): 4I have entered qlen
              3
                   4
                        5
I have entered qlen
I have entered qlen
I have entered qlen
[3]qlen(): 3I have entered qlen
                   4
                        5
I have entered qlen
I have entered qlen
I have entered qlen
[4]qlen(): 2I have entered qlen
                        5
I have entered qlen
Back from LWPS.

---------------------------------
Differences (< reference > output)
---------------------------------

6a7,10
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [1]qlen(): 5I have entered qlen
10a15,18
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [2]qlen(): 4I have entered qlen
13a22,25
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [3]qlen(): 3I have entered qlen
15a28,31
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [4]qlen(): 2I have entered qlen
16a33
> I have entered qlen
---------
=================================================
TEST 11: Five threads, variable iters, exit from front

This is the numbersmain program distributed with the assignment.
Each thread (1..5) exits after its number of iterations


----------
Reference:
----------
Launching LWPS
    1
         2
              3
                   4
                        5
         2
              3
                   4
                        5
A thread exited with status 1
              3
                   4
                        5
A thread exited with status 2
                   4
                        5
A thread exited with status 3
                        5
A thread exited with status 4
A thread exited with status 5
Back from LWPS.
----------
Submitted:
----------
Launching LWPS
    1
         2
              3
                   4
                        5
I have entered qlen
I have entered qlen
I have entered qlen
[1]qlen(): 5I have entered qlen
         2
              3
                   4
                        5
A thread exited with status 1
I have entered qlen
I have entered qlen
I have entered qlen
[2]qlen(): 4I have entered qlen
              3
                   4
                        5
A thread exited with status 2
I have entered qlen
I have entered qlen
I have entered qlen
[3]qlen(): 3I have entered qlen
                   4
                        5
A thread exited with status 3
I have entered qlen
I have entered qlen
I have entered qlen
[4]qlen(): 2I have entered qlen
                        5
A thread exited with status 4
I have entered qlen
A thread exited with status 4
Back from LWPS.

---------------------------------
Differences (< reference > output)
---------------------------------

6a7,10
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [1]qlen(): 5I have entered qlen
11a16,19
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [2]qlen(): 4I have entered qlen
15a24,27
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [3]qlen(): 3I have entered qlen
18a31,34
> I have entered qlen
> I have entered qlen
> I have entered qlen
> [4]qlen(): 2I have entered qlen
21c37,38
< A thread exited with status 5
---
> I have entered qlen
> A thread exited with status 4
---------
=================================================
TEST 12: Five threads, variable iters, exit from back

This is the numbersmain program distributed with the assignment.
Each thread (1..5) exits after N minus its number of iterations.
The effect is to always have the last process call lwp_exit().


----------
Reference:
----------
Launching LWPS
    1
         2
              3
                   4
                        5
    1
         2
              3
                   4
    1
         2
              3
    1
         2
    1
Back from LWPS.
----------
Submitted:
----------
^CParent process (37898) caught signal (Interrupt).
Forwarding signal (Interrupt) to child.
Child process (37906) exited due to signal (Interrupt).

---------------------------------
Differences (< reference > output)
---------------------------------

1,17c1,3
< Launching LWPS
<     1
<          2
<               3
<                    4
<                         5
<     1
<          2
<               3
<                    4
<     1
<          2
<               3
<     1
<          2
<     1
< Back from LWPS.
---
> ^CParent process (37898) caught signal (Interrupt).
> Forwarding signal (Interrupt) to child.
> Child process (37906) exited due to signal (Interrupt).
---------
=================================================
TEST 13: Five threads, AlwaysZero scheduling

This is the numbersmain program distributed with the assignment,
but with the scheduler changed to always run the head of the queue.
Each thread (1..5) exits after its number of iterations.


----------
Reference:
----------
Launching LWPS
    1
         2
         2
              3
              3
              3
                   4
                   4
                   4
                   4
                        5
                        5
                        5
                        5
                        5
Back from LWPS.
----------
Submitted:
----------
Launching LWPS
    1
[1]qlen(): 5         2
         2
[2]qlen(): 4              3
              3
              3
[3]qlen(): 3                   4
                   4
                   4
                   4
[4]qlen(): 2                        5
                        5
                        5
                        5
                        5
[5]qlen(): 1Back from LWPS.

---------------------------------
Differences (< reference > output)
---------------------------------

2a3
> [1]qlen(): 5         2
4,5c5
<          2
<               3
---
> [2]qlen(): 4              3
7a8
> [3]qlen(): 3                   4
11,12c12
<                    4
<                         5
---
> [4]qlen(): 2                        5
17c17
< Back from LWPS.
---
> [5]qlen(): 1Back from LWPS.
---------
=================================================
TEST 14: One lwp, yields, and returns

This test spawns a single thread that prints a message, yields
to itself, then returns

----------
Reference:
----------
Greetings from Thread 0.  Yielding...
I'm still alive.  Goodbye
After thread termination
----------
Submitted:
----------
Greetings from Thread 0.  Yielding...
I have entered qlen
After thread termination

---------------------------------
Differences (< reference > output)
---------------------------------

2c2
< I'm still alive.  Goodbye
---
> I have entered qlen
---------
=================================================
TEST 15: Ten lwps, yields, and returns

This test spawns several threads that prints a message, yields
to itself, then returns

----------
Reference:
----------
Greetings from Thread 0.  Yielding...
Greetings from Thread 1.  Yielding...
Greetings from Thread 2.  Yielding...
Greetings from Thread 3.  Yielding...
Greetings from Thread 4.  Yielding...
Greetings from Thread 5.  Yielding...
Greetings from Thread 6.  Yielding...
Greetings from Thread 7.  Yielding...
Greetings from Thread 8.  Yielding...
Greetings from Thread 9.  Yielding...
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
I'm still alive.  Goodbye
After thread termination
----------
Submitted:
----------
^CParent process (38003) caught signal (Interrupt).
Forwarding signal (Interrupt) to child.
Child process (38011) exited due to signal (Interrupt).

---------------------------------
Differences (< reference > output)
---------------------------------

1,21c1,3
< Greetings from Thread 0.  Yielding...
< Greetings from Thread 1.  Yielding...
< Greetings from Thread 2.  Yielding...
< Greetings from Thread 3.  Yielding...
< Greetings from Thread 4.  Yielding...
< Greetings from Thread 5.  Yielding...
< Greetings from Thread 6.  Yielding...
< Greetings from Thread 7.  Yielding...
< Greetings from Thread 8.  Yielding...
< Greetings from Thread 9.  Yielding...
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< I'm still alive.  Goodbye
< After thread termination
---
> ^CParent process (38003) caught signal (Interrupt).
> Forwarding signal (Interrupt) to child.
> Child process (38011) exited due to signal (Interrupt).
---------
=================================================
TEST 16: Lwp spawns another then exits 100 times.

One thread creates a new one, then exits.



----------
Reference:
----------
100
99
98
97
96
95
94
93
92
91
90
89
88
87
86
85
84
83
82
81
80
79
78
77
76
75
74
73
72
71
70
69
68
67
66
65
64
63
62
61
60
59
58
57
56
55
54
53
52
51
50
49
48
47
46
45
44
43
42
41
40
39
38
37
36
35
34
33
32
31
30
29
28
27
26
25
24
23
22
21
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
Bye
----------
Submitted:
----------
Child process (38038) exited due to signal (Segmentation fault).

---------------------------------
Differences (< reference > output)
---------------------------------

1,101c1
< 100
< 99
< 98
< 97
< 96
< 95
< 94
< 93
< 92
< 91
< 90
< 89
< 88
< 87
< 86
< 85
< 84
< 83
< 82
< 81
< 80
< 79
< 78
< 77
< 76
< 75
< 74
< 73
< 72
< 71
< 70
< 69
< 68
< 67
< 66
< 65
< 64
< 63
< 62
< 61
< 60
< 59
< 58
< 57
< 56
< 55
< 54
< 53
< 52
< 51
< 50
< 49
< 48
< 47
< 46
< 45
< 44
< 43
< 42
< 41
< 40
< 39
< 38
< 37
< 36
< 35
< 34
< 33
< 32
< 31
< 30
< 29
< 28
< 27
< 26
< 25
< 24
< 23
< 22
< 21
< 20
< 19
< 18
< 17
< 16
< 15
< 14
< 13
< 12
< 11
< 10
< 9
< 8
< 7
< 6
< 5
< 4
< 3
< 2
< 1
< Bye
---
> Child process (38038) exited due to signal (Segmentation fault).
---------
